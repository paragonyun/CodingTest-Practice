def solution(n):
    '''
    단순 3진법이 아니라 3에 4가 오기 때문에 생각이 필요
    몫과 나머지 이용하기 위해 divmod() 쓸 거임
    
    [4,1,2] 에서 나머지 index로 서서 삥삥 돌리는 방식
    
    원래 3진법은 0,1,2만 옴 근데 이건 1,2,4가 옴
    
    n이 3의 배수가 아닐 때 :
    그냥 3진법 쓰고 idx 적용하면 됨
    
    n이 3의 배수일 때 : 
    3으로 나누어 떨어지면 끝에는 무조건 4가 옴 (나머지 0이니까)
    
    문제는 첫번째로 나누고 나서 그 이후 나머지가 한 index씩 밀려서 나옴
    
    이건 idx -1 을 해줘서 보정해주면 그 다음 몫에서 에러가 남 
    
    그냥 몫-1을 해줘서 idx를 하나씩 밀어주는 방법 채택
    
    '''
    answer = ''
    
    idx_lst = ['4','1','2']
    
    
    while n  : 
        n, mod = divmod(n, 3) ## 몫과 나머지 구하기
        answer += str(idx_lst[mod]) ## 하나씩 추가
         
        if not mod : ## mod가 0이 아니면
            n -= 1   ## n-1을 해줘서 나머지 idx가 밀리는 현상 보정
        
    return answer[::-1] ## +=로 추가했으므로 뒤집어서 마무리


'''
11 : 42
12 : 44
13 : 111
14 : 112
15 : 114
16 : 121
17 : 122
18 : 124
'''